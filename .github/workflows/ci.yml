name: üîÑ Symbol-Heavy Drawing Generator CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          libffi-dev \
          shared-mime-info
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black ruff pytest
        pip install -r requirements.txt
    
    - name: Lint with black
      run: black --check .
    
    - name: Lint with ruff  
      run: ruff .
    
    - name: Run unit tests
      run: |
        if [ -d "tests" ]; then
          pytest tests/ -v
        else
          echo "No tests directory found, skipping unit tests"
        fi
    
    - name: Test CLI functionality
      run: |
        python generate.py --help
        python generate.py -n 1 --jobs 1 --noise-level 0

  build-demo:
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          libffi-dev \
          shared-mime-info
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Generate 3 demo pages
      run: |
        echo "üéØ Generating 3 demo pages..."
        python generate.py -n 3 --sheet-size A4 --noise-level 1 --jobs 2
        echo "‚úÖ Demo generation completed"
        ls -la out/
    
    - name: Upload demo artifacts
      uses: actions/upload-artifact@v3
      with:
        name: demo-pages-${{ github.sha }}
        path: out/
        retention-days: 7

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: drawing-generator:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker image
      run: |
        echo "üê≥ Testing Docker image..."
        docker run --rm drawing-generator:${{ github.sha }} --help
        mkdir -p ./test-out
        docker run --rm -v $(pwd)/test-out:/app/out drawing-generator:${{ github.sha }} -n 2 --noise-level 0
        echo "‚úÖ Docker test completed"
        ls -la test-out/